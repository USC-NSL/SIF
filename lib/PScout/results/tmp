com.android.server.LocationManagerService: void checkMockPermissionsSafe()
com.android.server.LocationManagerService: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)
com.android.server.LocationManagerService: void clearTestProviderEnabled(java.lang.String)
com.android.server.LocationManagerService: void clearTestProviderLocation(java.lang.String)
com.android.server.LocationManagerService: void clearTestProviderStatus(java.lang.String)
com.android.server.LocationManagerService: void removeTestProvider(java.lang.String)
com.android.server.LocationManagerService: void setTestProviderEnabled(java.lang.String,boolean)
com.android.server.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location)
com.android.server.LocationManagerService: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)
android.location.ILocationManager$Stub$Proxy: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)
android.location.ILocationManager$Stub: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)
android.location.ILocationManager$Stub$Proxy: void clearTestProviderEnabled(java.lang.String)
android.location.ILocationManager$Stub: void clearTestProviderEnabled(java.lang.String)
android.location.ILocationManager$Stub$Proxy: void clearTestProviderLocation(java.lang.String)
android.location.ILocationManager$Stub: void clearTestProviderLocation(java.lang.String)
android.location.ILocationManager$Stub$Proxy: void clearTestProviderStatus(java.lang.String)
android.location.ILocationManager$Stub: void clearTestProviderStatus(java.lang.String)
android.location.ILocationManager$Stub$Proxy: void removeTestProvider(java.lang.String)
android.location.ILocationManager$Stub: void removeTestProvider(java.lang.String)
android.location.ILocationManager$Stub$Proxy: void setTestProviderEnabled(java.lang.String,boolean)
android.location.ILocationManager$Stub: void setTestProviderEnabled(java.lang.String,boolean)
android.location.ILocationManager$Stub$Proxy: void setTestProviderLocation(java.lang.String,android.location.Location)
android.location.ILocationManager$Stub: void setTestProviderLocation(java.lang.String,android.location.Location)
android.location.ILocationManager$Stub$Proxy: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)
android.location.ILocationManager$Stub: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)
android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.location.ILocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)
android.location.ILocationManager: void clearTestProviderEnabled(java.lang.String)
android.location.ILocationManager: void clearTestProviderLocation(java.lang.String)
android.location.ILocationManager: void clearTestProviderStatus(java.lang.String)
android.location.ILocationManager: void removeTestProvider(java.lang.String)
android.location.ILocationManager: void setTestProviderEnabled(java.lang.String,boolean)
android.location.ILocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)
android.location.ILocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)
com.android.server.LocationManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)
android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)
android.location.LocationManager: void clearTestProviderLocation(java.lang.String)
android.location.LocationManager: void clearTestProviderStatus(java.lang.String)
android.location.LocationManager: void removeTestProvider(java.lang.String)
android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)
android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)
android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)
com.android.server.LocationManagerService: java.lang.String checkPermissionsSafe(java.lang.String,java.lang.String)
com.android.server.LocationManagerService: android.location.Location _getLastKnownLocationLocked(java.lang.String)
com.android.server.LocationManagerService: android.os.Bundle _getProviderInfoLocked(java.lang.String)
com.android.server.LocationManagerService: boolean _isProviderEnabledLocked(java.lang.String)
com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
com.android.server.LocationManagerService: void requestLocationUpdatesLocked(java.lang.String,long,float,boolean,com.android.server.LocationManagerService$Receiver)
com.android.server.LocationManagerService: android.location.Location getLastKnownLocation(java.lang.String)
com.android.server.LocationManagerService: android.os.Bundle getProviderInfo(java.lang.String)
com.android.server.LocationManagerService: boolean isProviderEnabled(java.lang.String)
android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
android.location.ILocationManager$Stub: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
com.android.server.LocationManagerService: void addProximityAlertLocked(double,double,float,long,android.app.PendingIntent)
com.android.server.LocationManagerService: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)
com.android.server.LocationManagerService: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)
android.location.ILocationManager$Stub$Proxy: android.location.Location getLastKnownLocation(java.lang.String)
android.location.ILocationManager$Stub: android.location.Location getLastKnownLocation(java.lang.String)
android.location.ILocationManager$Stub$Proxy: android.os.Bundle getProviderInfo(java.lang.String)
android.location.ILocationManager$Stub: android.os.Bundle getProviderInfo(java.lang.String)
android.location.ILocationManager$Stub$Proxy: boolean isProviderEnabled(java.lang.String)
android.location.ILocationManager$Stub: boolean isProviderEnabled(java.lang.String)
android.location.ILocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.android.server.LocationManagerService: void addProximityAlert(double,double,float,long,android.app.PendingIntent)
android.location.ILocationManager$Stub$Proxy: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)
android.location.ILocationManager$Stub: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)
android.location.ILocationManager$Stub$Proxy: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)
android.location.ILocationManager$Stub: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)
android.location.ILocationManager: android.location.Location getLastKnownLocation(java.lang.String)
android.location.ILocationManager: android.os.Bundle getProviderInfo(java.lang.String)
android.location.ILocationManager: boolean isProviderEnabled(java.lang.String)
android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
com.android.server.LocationManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.location.ILocationManager$Stub$Proxy: void addProximityAlert(double,double,float,long,android.app.PendingIntent)
android.location.ILocationManager$Stub: void addProximityAlert(double,double,float,long,android.app.PendingIntent)
android.location.ILocationManager: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)
android.location.ILocationManager: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)
android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)
android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)
android.location.LocationManager: boolean isProviderEnabled(java.lang.String)
android.location.ILocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)
android.location.LocationManager: void _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.LocationListener,android.os.Looper)
android.location.LocationManager: void _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)
com.android.gallery3d.util.ReverseGeocoder: java.lang.String computeAddress(com.android.gallery3d.util.ReverseGeocoder$SetLatLong)
com.android.server.location.LocationBasedCountryDetector: android.location.Location getLastKnownLocation()
com.android.server.UiModeManagerService$8: void retrieveLocation()
com.android.wallpaper.grass.GrassRS: void updateLocation()
com.android.server.UiModeManagerService: void systemReady()
android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)
android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)
android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)
android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)
android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)
android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)
android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)
android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)
android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)
android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)
com.android.gallery3d.data.LocationClustering: java.lang.String generateName(java.util.ArrayList,com.android.gallery3d.util.ReverseGeocoder)
com.android.server.location.LocationBasedCountryDetector$2: void run()
com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()
com.android.wallpaper.grass.GrassRS: void access$300(com.android.wallpaper.grass.GrassRS)
com.android.wallpaper.grass.GrassRS: void start()
com.android.server.ServerThread$1: void run()
android.webkit.GeolocationService: void registerForLocationUpdates()
com.android.camera.LocationManager: void startReceivingLocationUpdates()
com.android.server.location.LocationBasedCountryDetector: void registerListener(java.lang.String,android.location.LocationListener)
com.android.gallery3d.data.LocationClustering: void run(com.android.gallery3d.data.MediaSet)
com.android.server.location.CountryDetectorBase: android.location.Country detectCountry()
com.android.wallpaper.grass.GrassRS$TimezoneTracker: void onReceive(android.content.Context,android.content.Intent)
com.android.wallpaper.grass.GrassView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.android.wallpaper.RenderScriptScene: void start()
android.webkit.GeolocationService: boolean start()
android.webkit.GeolocationService: void setEnableGps(boolean)
com.android.camera.LocationManager: void recordLocation(boolean)
com.android.gallery3d.data.Clustering: void run(com.android.gallery3d.data.MediaSet)
com.android.server.location.ComprehensiveCountryDetector: void startLocationBasedDetector(android.location.CountryListener)
com.android.wallpaper.fall.FallRS: void start()
com.android.wallpaper.galaxy.GalaxyRS: void start()
com.android.wallpaper.nexus.NexusRS: void start()
com.android.wallpaper.RenderScriptWallpaper$RenderScriptEngine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)
com.android.wallpaper.RenderScriptWallpaper$RenderScriptEngine: void onVisibilityChanged(boolean)
com.android.camera.Camera: void initializeFirstTime()
com.android.camera.Camera: void initializeSecondTime()
com.android.camera.Camera: void onPause()
com.android.camera.Camera: void onSharedPreferenceChanged()
com.android.camera.VideoCamera: void onPause()
com.android.camera.VideoCamera: void onResume()
com.android.camera.VideoCamera: void onSharedPreferenceChanged()
com.android.gallery3d.data.ClusterAlbumSet: void updateClusters()
com.android.server.location.ComprehensiveCountryDetector: void runAfterDetection(android.location.Country,android.location.Country,boolean,boolean)
com.android.wallpaper.fall.FallView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.android.wallpaper.galaxy.GalaxyView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.android.camera.Camera: void access$1300(com.android.camera.Camera)
com.android.camera.Camera: void onResume()
com.android.camera.ActivityBase: void onPause()
com.android.gallery3d.app.AbstractGalleryActivity: void onPause()
com.android.camera.CameraPreference$OnPreferenceChangedListener: void onSharedPreferenceChanged()
com.android.camera.Camera: void restorePreferences()
com.android.camera.ActivityBase: void onResume()
com.android.gallery3d.app.AbstractGalleryActivity: void onResume()
com.android.camera.VideoCamera: void onCancelBgTraining(android.view.View)
com.android.camera.VideoCamera: void restorePreferences()
com.android.gallery3d.data.ClusterAlbumSet: long reload()
com.android.server.location.ComprehensiveCountryDetector$2: void run()
com.android.camera.PanoramaActivity: void onPause()
com.android.gallery3d.app.AlbumPicker: void onPause()
com.android.gallery3d.app.CropImage: void onPause()
com.android.gallery3d.app.DialogPicker: void onPause()
com.android.gallery3d.app.Gallery: void onPause()
com.android.gallery3d.app.PickerActivity: void onPause()
com.android.camera.ui.IndicatorControl: void onSettingChanged()
com.android.camera.Camera: void access$4300(com.android.camera.Camera)
com.android.camera.PanoramaActivity: void onResume()
com.android.gallery3d.app.AlbumPicker: void onResume()
com.android.gallery3d.app.CropImage: void onResume()
com.android.gallery3d.app.DialogPicker: void onResume()
com.android.gallery3d.app.Gallery: void onResume()
com.android.gallery3d.app.PickerActivity: void onResume()
com.android.camera.VideoCamera: void access$2100(com.android.camera.VideoCamera)
com.android.gallery3d.data.MediaSet: long reload()
com.android.camera.ui.IndicatorButton$Listener: void onSettingChanged()
com.android.camera.ui.IndicatorControlBarContainer: void onSettingChanged()
com.android.camera.ui.IndicatorControlBar: void onSettingChanged()
com.android.camera.ui.IndicatorControlContainer: void onSettingChanged()
com.android.camera.ui.IndicatorControlWheelContainer: void onSettingChanged()
com.android.camera.ui.IndicatorControlWheel: void onSettingChanged()
com.android.camera.ui.OtherSettingsPopup$Listener: void onSettingChanged()
com.android.camera.ui.SecondLevelIndicatorControlBar: void onSettingChanged()
com.android.camera.Camera$4: void run()
com.android.camera.VideoCamera$3: void run()
com.android.gallery3d.app.AlbumDataLoader$ReloadTask: void run()
com.android.gallery3d.app.AlbumSetDataLoader$ReloadTask: void run()
com.android.gallery3d.app.PhotoDataAdapter$ReloadTask: void run()
com.android.gallery3d.app.SlideshowPage$SequentialSource: long reload()
com.android.gallery3d.app.SlideshowPage$ShuffleSource: long reload()
com.android.gallery3d.data.ClusterAlbum: long reload()
com.android.gallery3d.data.ComboAlbum: long reload()
com.android.gallery3d.data.ComboAlbumSet: long reload()
com.android.gallery3d.data.FilterDeleteSet: long reload()
com.android.gallery3d.data.FilterTypeSet: long reload()
com.android.gallery3d.data.FilterTypeSet: void updateData()
com.android.gallery3d.data.LocalAlbumSet: long reload()
com.android.gallery3d.data.LocalMergeAlbum: long reload()
com.android.gallery3d.data.MtpDeviceSet: long reload()
com.android.gallery3d.gadget.MediaSetSource: void reload()
com.android.camera.ui.IndicatorButton: void onSettingChanged()
com.android.camera.ui.OtherSettingsPopup: void onSettingChanged()
com.android.gallery3d.app.AlbumDataLoader: void resume()
com.android.gallery3d.app.AlbumSetDataLoader: void resume()
com.android.gallery3d.app.PhotoDataAdapter: void resume()
com.android.gallery3d.app.SlideshowDataAdapter$SlideshowSource: long reload()
com.android.gallery3d.gadget.WidgetSource: void reload()
com.android.camera.ui.BasicSettingPopup$Listener: void onSettingChanged()
com.android.camera.ui.EffectSettingPopup$Listener: void onSettingChanged()
com.android.camera.ui.InLineSettingItem$Listener: void onSettingChanged()
com.android.gallery3d.app.AlbumPage: void onResume()
com.android.gallery3d.app.AlbumSetPage: void onResume()
com.android.gallery3d.app.ManageCachePage: void onResume()
com.android.gallery3d.app.PhotoPage$Model: void resume()
com.android.gallery3d.app.SlideshowDataAdapter: com.android.gallery3d.data.MediaItem loadItem()
com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: void onDataSetChanged()
com.android.camera.ui.BasicSettingPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.android.camera.ui.EffectSettingPopup: void onClick(android.view.View)
com.android.camera.ui.EffectSettingPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.android.camera.ui.InLineSettingItem: boolean changeIndex(int)
com.android.gallery3d.app.ActivityState: void onResume()
com.android.gallery3d.app.PhotoPage: void onResume()
com.android.gallery3d.app.SlideshowDataAdapter: com.android.gallery3d.data.MediaItem access$500(com.android.gallery3d.app.SlideshowDataAdapter)
com.android.camera.ui.InLineSettingKnob: boolean changeIndex(int)
com.android.camera.ui.InLineSettingRestore: boolean changeIndex(int)
com.android.camera.ui.InLineSettingSwitch: boolean changeIndex(int)
com.android.gallery3d.app.ActivityState: void resume()
com.android.gallery3d.app.SlideshowPage: void onResume()
com.android.gallery3d.app.SlideshowDataAdapter$ReloadTask: java.lang.Void run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.camera.ui.InLineSettingKnob$1: void run()
com.android.camera.ui.InLineSettingKnob$2: boolean onTouch(android.view.View,android.view.MotionEvent)
com.android.camera.ui.InLineSettingKnob$3: boolean onTouch(android.view.View,android.view.MotionEvent)
com.android.camera.ui.InLineSettingSwitch$1: void onCheckedChanged(android.widget.CompoundButton,boolean)
com.android.gallery3d.app.AlbumPage: void resume()
com.android.gallery3d.app.AlbumSetPage: void resume()
com.android.gallery3d.app.ManageCachePage: void resume()
com.android.gallery3d.app.PhotoPage: void resume()
com.android.gallery3d.app.SlideshowPage: void resume()
com.android.gallery3d.app.StateManager: void finishState(com.android.gallery3d.app.ActivityState)
com.android.gallery3d.app.StateManager: void resume()
com.android.gallery3d.app.StateManager: void startStateForResult(java.lang.Class,int,android.os.Bundle)
com.android.gallery3d.app.StateManager: void startState(java.lang.Class,android.os.Bundle)
com.android.gallery3d.app.StateManager: void switchState(com.android.gallery3d.app.ActivityState,java.lang.Class,android.os.Bundle)
com.android.gallery3d.app.SlideshowDataAdapter$ReloadTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.ActivityState: void onBackPressed()
com.android.gallery3d.app.AlbumPage: boolean onItemSelected(android.view.MenuItem)
com.android.gallery3d.app.AlbumPage: void clearLoadingBit(int)
com.android.gallery3d.app.AlbumSetPage: void clearLoadingBit(int)
com.android.gallery3d.app.PhotoPage$2: void onLoadingFinished()
com.android.gallery3d.app.SlideshowPage: void showPendingBitmap()
com.android.gallery3d.app.AlbumPage: void doCluster(int)
com.android.gallery3d.app.AlbumPage: void pickPhoto(int)
com.android.gallery3d.app.AlbumSetPage: void pickAlbum(int)
com.android.gallery3d.app.PhotoPage: boolean onItemSelected(android.view.MenuItem)
com.android.camera.ActivityBase: void createCameraScreenNail(boolean)
com.android.gallery3d.app.AlbumPicker: void onCreate(android.os.Bundle)
com.android.gallery3d.app.AlbumSetPage: boolean onItemSelected(android.view.MenuItem)
com.android.gallery3d.app.DialogPicker: void onCreate(android.os.Bundle)
com.android.gallery3d.app.Gallery: void startDefaultPage()
com.android.gallery3d.app.Gallery: void startGetContent(android.content.Intent)
com.android.gallery3d.app.Gallery: void startViewAction(android.content.Intent)
com.android.gallery3d.ui.ImportCompleteListener: void goToImportedAlbum()
com.android.gallery3d.app.AlbumPage: void onUpPressed()
com.android.gallery3d.app.AlbumSetPage: void doCluster(int)
com.android.gallery3d.app.PhotoPage: void onUpPressed()
com.android.gallery3d.util.ThreadPool$Job: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.AlbumSetPage: void onBackPressed()
com.android.gallery3d.app.ManageCachePage: void onBackPressed()
com.android.gallery3d.app.PhotoPage: void onBackPressed()
com.android.gallery3d.app.SlideshowPage: void onBackPressed()
com.android.gallery3d.app.StateManager: boolean itemSelected(android.view.MenuItem)
com.android.gallery3d.app.StateManager: void onBackPressed()
com.android.gallery3d.app.ActivityState: boolean onItemSelected(android.view.MenuItem)
com.android.gallery3d.app.AlbumPage$5: boolean onActionItemClicked(android.view.MenuItem)
com.android.gallery3d.app.AlbumPage: void access$1600(com.android.gallery3d.app.AlbumPage,int)
com.android.gallery3d.app.AlbumPage: void onPause()
com.android.gallery3d.app.AlbumSetPage: void access$1600(com.android.gallery3d.app.AlbumSetPage,int)
com.android.gallery3d.app.AlbumSetPage: void onPause()
com.android.gallery3d.app.LoadingListener: void onLoadingFinished()
com.android.gallery3d.app.PhotoDataAdapter$DataListener: void onLoadingFinished()
com.android.gallery3d.app.SlideshowPage: void access$100(com.android.gallery3d.app.SlideshowPage)
com.android.gallery3d.app.GalleryActionBar$ClusterRunner: void doCluster(int)
com.android.gallery3d.app.AlbumPage: void access$900(com.android.gallery3d.app.AlbumPage,int)
com.android.gallery3d.app.AlbumSetPage: void access$1000(com.android.gallery3d.app.AlbumSetPage,int)
com.android.camera.Camera: void createCameraScreenNail(boolean)
com.android.camera.PanoramaActivity: void createCameraScreenNail(boolean)
com.android.camera.VideoCamera: void createCameraScreenNail(boolean)
com.android.gallery3d.app.AbstractGalleryActivity: void onCreate(android.os.Bundle)
com.android.gallery3d.app.PickerActivity: void onCreate(android.os.Bundle)
com.android.gallery3d.app.AlbumSetPage$4: boolean onActionItemClicked(android.view.MenuItem)
com.android.gallery3d.app.Gallery: void initializeByIntent()
com.android.gallery3d.ui.ImportCompleteListener: void onProgressComplete(int)
com.android.gallery3d.app.AlbumPage: void onBackPressed()
com.android.gallery3d.app.CropImage$LoadBitmapDataTask: android.graphics.Bitmap run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.CropImage$LoadDataTask: android.graphics.BitmapRegionDecoder run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.PhotoDataAdapter$FullImageJob: android.graphics.BitmapRegionDecoder run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob: com.android.gallery3d.ui.ScreenNail run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.gadget.WidgetUtils: android.graphics.Bitmap createWidgetBitmap(com.android.gallery3d.data.MediaItem)
com.android.gallery3d.ui.AlbumSetSlidingWindow: com.android.gallery3d.ui.BitmapTexture getLoadingTexture()
com.android.gallery3d.util.JobLimiter$JobWrapper: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.util.ThreadPool$Worker: void run()
com.android.gallery3d.app.ManageCachePage: void onClick(android.view.View)
com.android.gallery3d.app.ManageCachePage: void onProgressComplete(int)
com.android.gallery3d.app.SlideshowPage$1: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.app.AbstractGalleryActivity: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.gallery3d.app.AbstractGalleryActivity: void onBackPressed()
com.android.gallery3d.app.ManageCachePage: boolean onItemSelected(android.view.MenuItem)
com.android.gallery3d.app.SlideshowPage: boolean onItemSelected(android.view.MenuItem)
com.android.gallery3d.ui.ActionModeHandler$ActionModeListener: boolean onActionItemClicked(android.view.MenuItem)
com.android.gallery3d.app.AlbumPage$7: void run()
com.android.gallery3d.app.AlbumPage$MyLoadingListener: void onLoadingFinished()
com.android.gallery3d.app.ActivityState: void onPause()
com.android.gallery3d.app.AlbumSetPage$6: void run()
com.android.gallery3d.app.AlbumSetPage$MyLoadingListener: void onLoadingFinished()
com.android.gallery3d.app.AlbumSetDataLoader: java.lang.Object executeAndWait(java.util.concurrent.Callable)
com.android.gallery3d.app.PhotoDataAdapter: java.lang.Object executeAndWait(java.util.concurrent.Callable)
com.android.gallery3d.app.AlbumDataLoader: java.lang.Object executeAndWait(java.util.concurrent.Callable)
com.android.gallery3d.app.GalleryActionBar$1: void onClick(android.content.DialogInterface,int)
com.android.gallery3d.app.GalleryActionBar: boolean onNavigationItemSelected(int,long)
com.android.camera.Camera: void onCreate(android.os.Bundle)
com.android.camera.PanoramaActivity: void onCreate(android.os.Bundle)
com.android.camera.VideoCamera: void onCreate(android.os.Bundle)
com.android.camera.ActivityBase: void onCreate(android.os.Bundle)
com.android.gallery3d.app.CropImage: void onCreate(android.os.Bundle)
com.android.gallery3d.app.Gallery: void onCreate(android.os.Bundle)
com.android.gallery3d.ui.MenuExecutor$ProgressListener: void onProgressComplete(int)
com.android.gallery3d.app.CropImage$LoadBitmapDataTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.CropImage$LoadDataTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.PhotoDataAdapter$FullImageJob: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.gadget.LocalPhotoSource: android.graphics.Bitmap getImage(int)
com.android.gallery3d.gadget.MediaSetSource: android.graphics.Bitmap getImage(int)
com.android.gallery3d.ui.GLView: boolean onTouch(android.view.MotionEvent)
com.android.camera.ActivityBase: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.camera.Camera: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.camera.PanoramaActivity: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.camera.VideoCamera: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.gallery3d.app.Gallery: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.gallery3d.app.PickerActivity: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.camera.ActivityBase: void onBackPressed()
com.android.gallery3d.app.AlbumPicker: void onBackPressed()
com.android.gallery3d.app.DialogPicker: void onBackPressed()
com.android.gallery3d.app.Gallery: void onBackPressed()
com.android.gallery3d.app.PickerActivity: void onBackPressed()
com.android.gallery3d.ui.ActionModeHandler: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)
com.android.gallery3d.app.ManageCachePage: void onPause()
com.android.gallery3d.app.PhotoPage: void onPause()
com.android.gallery3d.app.SlideshowPage: void onPause()
com.android.gallery3d.app.StateManager: void pause()
com.android.gallery3d.app.AlbumSetDataLoader: java.lang.Object access$1900(com.android.gallery3d.app.AlbumSetDataLoader,java.util.concurrent.Callable)
com.android.gallery3d.app.PhotoDataAdapter: java.lang.Object access$2500(com.android.gallery3d.app.PhotoDataAdapter,java.util.concurrent.Callable)
com.android.gallery3d.app.AlbumDataLoader: java.lang.Object access$1700(com.android.gallery3d.app.AlbumDataLoader,java.util.concurrent.Callable)
com.android.gallery3d.ui.MenuExecutor: void onProgressComplete(int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)
com.android.gallery3d.gadget.WidgetSource: android.graphics.Bitmap getImage(int)
com.android.gallery3d.app.AlbumPage$2: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.app.AlbumSetPage$1: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.app.ManageCachePage$1: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.app.PhotoPage$1: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.ui.CropView: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.ui.EdgeView: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.ui.GLView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.ScrollBarView: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.ui.SlideshowView: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.ui.TileImageView: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.app.AlbumPicker: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.gallery3d.app.DialogPicker: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.camera.Camera: void onBackPressed()
com.android.camera.PanoramaActivity: void onBackPressed()
com.android.camera.VideoCamera: void onBackPressed()
com.android.gallery3d.ui.ActionModeHandler$1: boolean onMenuItemClick(android.view.MenuItem)
com.android.gallery3d.ui.MenuExecutor: void access$700(com.android.gallery3d.ui.MenuExecutor,int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)
com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: android.widget.RemoteViews getViewAt(int)
com.android.gallery3d.app.AlbumPage$2: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.app.AlbumSetPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.app.ManageCachePage$1: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.app.PhotoPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.app.SlideshowPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.CropView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.CropView$FaceHighlightView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.CropView$HighlightRectangle: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.EdgeView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.GLRootView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.GLRootView: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.GLView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.GLView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.PhotoView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.ScrollBarView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.SlideshowView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.SlotView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.TileImageView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.UndoBarView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.MenuExecutor$MediaOperation: java.lang.Void run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.ui.GLRoot: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumPage$2: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.app.AlbumSetPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.app.ManageCachePage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.app.PhotoPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.app.SlideshowPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.CropView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.CropView$FaceHighlightView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.CropView$HighlightRectangle: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.EdgeView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.PhotoView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.ScrollBarView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.SlideshowView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.SlotView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.TileImageView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.UndoBarView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.app.AlbumPage$2: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumSetPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.ManageCachePage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.PhotoPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.SlideshowPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView$FaceHighlightView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView$HighlightRectangle: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.EdgeView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.GLView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.GLView: void removeAllComponents()
com.android.gallery3d.ui.PhotoView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.ScrollBarView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.SlideshowView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.SlotView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.TileImageView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.UndoBarView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.MenuExecutor$MediaOperation: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.ActivityState: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumPage$2: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumSetPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.ManageCachePage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.PhotoPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.SlideshowPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView$FaceHighlightView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView$HighlightRectangle: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.EdgeView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.PhotoView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.ScrollBarView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.SlideshowView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.SlotView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.TileImageView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.UndoBarView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumPage$2: void removeAllComponents()
com.android.gallery3d.app.AlbumSetPage$1: void removeAllComponents()
com.android.gallery3d.app.ManageCachePage$1: void removeAllComponents()
com.android.gallery3d.app.PhotoPage$1: void removeAllComponents()
com.android.gallery3d.app.SlideshowPage$1: void removeAllComponents()
com.android.gallery3d.ui.CropView$FaceHighlightView: void removeAllComponents()
com.android.gallery3d.ui.CropView$HighlightRectangle: void removeAllComponents()
com.android.gallery3d.ui.CropView: void removeAllComponents()
com.android.gallery3d.ui.EdgeView: void removeAllComponents()
com.android.gallery3d.ui.PhotoView: void removeAllComponents()
com.android.gallery3d.ui.ScrollBarView: void removeAllComponents()
com.android.gallery3d.ui.SlideshowView: void removeAllComponents()
com.android.gallery3d.ui.SlotView: void removeAllComponents()
com.android.gallery3d.ui.TileImageView: void removeAllComponents()
com.android.gallery3d.ui.UndoBarView: void removeAllComponents()
com.android.gallery3d.app.AlbumPage: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumSetPage: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.ManageCachePage: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.PhotoPage: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.SlideshowPage: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.SlideshowPage: void initializeViews()
com.android.gallery3d.app.SlideshowPage: void onCreate(android.os.Bundle,android.os.Bundle)
com.android.gallery3d.app.ActivityState: void onCreate(android.os.Bundle,android.os.Bundle)
com.android.gallery3d.app.StateManager: void restoreFromState(android.os.Bundle)
com.android.server.LocationManagerService: boolean isAllowedProviderSafe(java.lang.String)
com.android.server.LocationManagerService: java.util.List _getProvidersLocked(android.location.Criteria,boolean)
com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)
android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(android.location.Criteria,boolean)
android.location.ILocationManager$Stub: java.util.List getProviders(android.location.Criteria,boolean)
com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)
android.location.ILocationManager: java.util.List getProviders(android.location.Criteria,boolean)
android.location.ILocationManager$Stub$Proxy: java.lang.String getBestProvider(android.location.Criteria,boolean)
android.location.ILocationManager$Stub: java.lang.String getBestProvider(android.location.Criteria,boolean)
android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)
android.location.LocationManager: java.util.List getProviders(boolean)
android.location.ILocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)
com.android.server.location.LocationBasedCountryDetector: java.util.List getEnabledProviders()
android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)
com.android.server.LocationManagerService: boolean addGpsStatusListener(android.location.IGpsStatusListener)
android.location.ILocationManager$Stub$Proxy: boolean addGpsStatusListener(android.location.IGpsStatusListener)
android.location.ILocationManager$Stub: boolean addGpsStatusListener(android.location.IGpsStatusListener)
android.location.ILocationManager: boolean addGpsStatusListener(android.location.IGpsStatusListener)
android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)
android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus$NmeaListener)
com.android.phone.PhoneInterfaceManager: android.os.Bundle getCellLocation()
com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getCellLocation()
com.android.internal.telephony.ITelephony$Stub: android.os.Bundle getCellLocation()
com.android.internal.telephony.ITelephony: android.os.Bundle getCellLocation()
com.android.internal.telephony.ITelephony$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()
com.android.phone.PhoneInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.android.server.location.GpsLocationProvider: void requestRefLocation(int)
com.android.settings.RadioInfo: void onResume()
com.android.phone.PhoneInterfaceManager: java.util.List getNeighboringCellInfo()
com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getNeighboringCellInfo()
com.android.internal.telephony.ITelephony$Stub: java.util.List getNeighboringCellInfo()
com.android.internal.telephony.ITelephony: java.util.List getNeighboringCellInfo()
android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()
com.android.phone.PhoneInterfaceManager: java.util.List getAllCellInfo()
com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getAllCellInfo()
com.android.internal.telephony.ITelephony$Stub: java.util.List getAllCellInfo()
com.android.internal.telephony.ITelephony: java.util.List getAllCellInfo()
android.telephony.TelephonyManager: java.util.List getAllCellInfo()
com.android.server.LocationManagerService: java.lang.String checkPermissionsSafe(java.lang.String,java.lang.String)
com.android.server.LocationManagerService: android.location.Location _getLastKnownLocationLocked(java.lang.String)
com.android.server.LocationManagerService: android.os.Bundle _getProviderInfoLocked(java.lang.String)
com.android.server.LocationManagerService: boolean _isProviderEnabledLocked(java.lang.String)
com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
com.android.server.LocationManagerService: void requestLocationUpdatesLocked(java.lang.String,long,float,boolean,com.android.server.LocationManagerService$Receiver)
com.android.server.LocationManagerService: android.location.Location getLastKnownLocation(java.lang.String)
com.android.server.LocationManagerService: android.os.Bundle getProviderInfo(java.lang.String)
com.android.server.LocationManagerService: boolean isProviderEnabled(java.lang.String)
android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
android.location.ILocationManager$Stub: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
com.android.server.LocationManagerService: void addProximityAlertLocked(double,double,float,long,android.app.PendingIntent)
com.android.server.LocationManagerService: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)
com.android.server.LocationManagerService: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)
android.location.ILocationManager$Stub$Proxy: android.location.Location getLastKnownLocation(java.lang.String)
android.location.ILocationManager$Stub: android.location.Location getLastKnownLocation(java.lang.String)
android.location.ILocationManager$Stub$Proxy: android.os.Bundle getProviderInfo(java.lang.String)
android.location.ILocationManager$Stub: android.os.Bundle getProviderInfo(java.lang.String)
android.location.ILocationManager$Stub$Proxy: boolean isProviderEnabled(java.lang.String)
android.location.ILocationManager$Stub: boolean isProviderEnabled(java.lang.String)
android.location.ILocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.android.server.LocationManagerService: void addProximityAlert(double,double,float,long,android.app.PendingIntent)
android.location.ILocationManager$Stub$Proxy: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)
android.location.ILocationManager$Stub: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)
android.location.ILocationManager$Stub$Proxy: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)
android.location.ILocationManager$Stub: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)
android.location.ILocationManager: android.location.Location getLastKnownLocation(java.lang.String)
android.location.ILocationManager: android.os.Bundle getProviderInfo(java.lang.String)
android.location.ILocationManager: boolean isProviderEnabled(java.lang.String)
android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
com.android.server.LocationManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.location.ILocationManager$Stub$Proxy: void addProximityAlert(double,double,float,long,android.app.PendingIntent)
android.location.ILocationManager$Stub: void addProximityAlert(double,double,float,long,android.app.PendingIntent)
android.location.ILocationManager: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)
android.location.ILocationManager: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)
android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)
android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)
android.location.LocationManager: boolean isProviderEnabled(java.lang.String)
android.location.ILocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)
android.location.LocationManager: void _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.LocationListener,android.os.Looper)
android.location.LocationManager: void _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)
com.android.gallery3d.util.ReverseGeocoder: java.lang.String computeAddress(com.android.gallery3d.util.ReverseGeocoder$SetLatLong)
com.android.server.location.LocationBasedCountryDetector: android.location.Location getLastKnownLocation()
com.android.server.UiModeManagerService$8: void retrieveLocation()
com.android.wallpaper.grass.GrassRS: void updateLocation()
com.android.server.UiModeManagerService: void systemReady()
android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)
android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)
android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)
android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)
android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)
android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)
android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)
android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)
android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)
android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)
com.android.gallery3d.data.LocationClustering: java.lang.String generateName(java.util.ArrayList,com.android.gallery3d.util.ReverseGeocoder)
com.android.server.location.LocationBasedCountryDetector$2: void run()
com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()
com.android.wallpaper.grass.GrassRS: void access$300(com.android.wallpaper.grass.GrassRS)
com.android.wallpaper.grass.GrassRS: void start()
com.android.server.ServerThread$1: void run()
android.webkit.GeolocationService: void registerForLocationUpdates()
com.android.camera.LocationManager: void startReceivingLocationUpdates()
com.android.server.location.LocationBasedCountryDetector: void registerListener(java.lang.String,android.location.LocationListener)
com.android.gallery3d.data.LocationClustering: void run(com.android.gallery3d.data.MediaSet)
com.android.server.location.CountryDetectorBase: android.location.Country detectCountry()
com.android.wallpaper.grass.GrassRS$TimezoneTracker: void onReceive(android.content.Context,android.content.Intent)
com.android.wallpaper.grass.GrassView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.android.wallpaper.RenderScriptScene: void start()
android.webkit.GeolocationService: boolean start()
android.webkit.GeolocationService: void setEnableGps(boolean)
com.android.camera.LocationManager: void recordLocation(boolean)
com.android.gallery3d.data.Clustering: void run(com.android.gallery3d.data.MediaSet)
com.android.server.location.ComprehensiveCountryDetector: void startLocationBasedDetector(android.location.CountryListener)
com.android.wallpaper.fall.FallRS: void start()
com.android.wallpaper.galaxy.GalaxyRS: void start()
com.android.wallpaper.nexus.NexusRS: void start()
com.android.wallpaper.RenderScriptWallpaper$RenderScriptEngine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)
com.android.wallpaper.RenderScriptWallpaper$RenderScriptEngine: void onVisibilityChanged(boolean)
com.android.camera.Camera: void initializeFirstTime()
com.android.camera.Camera: void initializeSecondTime()
com.android.camera.Camera: void onPause()
com.android.camera.Camera: void onSharedPreferenceChanged()
com.android.camera.VideoCamera: void onPause()
com.android.camera.VideoCamera: void onResume()
com.android.camera.VideoCamera: void onSharedPreferenceChanged()
com.android.gallery3d.data.ClusterAlbumSet: void updateClusters()
com.android.server.location.ComprehensiveCountryDetector: void runAfterDetection(android.location.Country,android.location.Country,boolean,boolean)
com.android.wallpaper.fall.FallView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.android.wallpaper.galaxy.GalaxyView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.android.camera.Camera: void access$1300(com.android.camera.Camera)
com.android.camera.Camera: void onResume()
com.android.camera.ActivityBase: void onPause()
com.android.gallery3d.app.AbstractGalleryActivity: void onPause()
com.android.camera.CameraPreference$OnPreferenceChangedListener: void onSharedPreferenceChanged()
com.android.camera.Camera: void restorePreferences()
com.android.camera.ActivityBase: void onResume()
com.android.gallery3d.app.AbstractGalleryActivity: void onResume()
com.android.camera.VideoCamera: void onCancelBgTraining(android.view.View)
com.android.camera.VideoCamera: void restorePreferences()
com.android.gallery3d.data.ClusterAlbumSet: long reload()
com.android.server.location.ComprehensiveCountryDetector$2: void run()
com.android.camera.PanoramaActivity: void onPause()
com.android.gallery3d.app.AlbumPicker: void onPause()
com.android.gallery3d.app.CropImage: void onPause()
com.android.gallery3d.app.DialogPicker: void onPause()
com.android.gallery3d.app.Gallery: void onPause()
com.android.gallery3d.app.PickerActivity: void onPause()
com.android.camera.ui.IndicatorControl: void onSettingChanged()
com.android.camera.Camera: void access$4300(com.android.camera.Camera)
com.android.camera.PanoramaActivity: void onResume()
com.android.gallery3d.app.AlbumPicker: void onResume()
com.android.gallery3d.app.CropImage: void onResume()
com.android.gallery3d.app.DialogPicker: void onResume()
com.android.gallery3d.app.Gallery: void onResume()
com.android.gallery3d.app.PickerActivity: void onResume()
com.android.camera.VideoCamera: void access$2100(com.android.camera.VideoCamera)
com.android.gallery3d.data.MediaSet: long reload()
com.android.camera.ui.IndicatorButton$Listener: void onSettingChanged()
com.android.camera.ui.IndicatorControlBarContainer: void onSettingChanged()
com.android.camera.ui.IndicatorControlBar: void onSettingChanged()
com.android.camera.ui.IndicatorControlContainer: void onSettingChanged()
com.android.camera.ui.IndicatorControlWheelContainer: void onSettingChanged()
com.android.camera.ui.IndicatorControlWheel: void onSettingChanged()
com.android.camera.ui.OtherSettingsPopup$Listener: void onSettingChanged()
com.android.camera.ui.SecondLevelIndicatorControlBar: void onSettingChanged()
com.android.camera.Camera$4: void run()
com.android.camera.VideoCamera$3: void run()
com.android.gallery3d.app.AlbumDataLoader$ReloadTask: void run()
com.android.gallery3d.app.AlbumSetDataLoader$ReloadTask: void run()
com.android.gallery3d.app.PhotoDataAdapter$ReloadTask: void run()
com.android.gallery3d.app.SlideshowPage$SequentialSource: long reload()
com.android.gallery3d.app.SlideshowPage$ShuffleSource: long reload()
com.android.gallery3d.data.ClusterAlbum: long reload()
com.android.gallery3d.data.ComboAlbum: long reload()
com.android.gallery3d.data.ComboAlbumSet: long reload()
com.android.gallery3d.data.FilterDeleteSet: long reload()
com.android.gallery3d.data.FilterTypeSet: long reload()
com.android.gallery3d.data.FilterTypeSet: void updateData()
com.android.gallery3d.data.LocalAlbumSet: long reload()
com.android.gallery3d.data.LocalMergeAlbum: long reload()
com.android.gallery3d.data.MtpDeviceSet: long reload()
com.android.gallery3d.gadget.MediaSetSource: void reload()
com.android.camera.ui.IndicatorButton: void onSettingChanged()
com.android.camera.ui.OtherSettingsPopup: void onSettingChanged()
com.android.gallery3d.app.AlbumDataLoader: void resume()
com.android.gallery3d.app.AlbumSetDataLoader: void resume()
com.android.gallery3d.app.PhotoDataAdapter: void resume()
com.android.gallery3d.app.SlideshowDataAdapter$SlideshowSource: long reload()
com.android.gallery3d.gadget.WidgetSource: void reload()
com.android.camera.ui.BasicSettingPopup$Listener: void onSettingChanged()
com.android.camera.ui.EffectSettingPopup$Listener: void onSettingChanged()
com.android.camera.ui.InLineSettingItem$Listener: void onSettingChanged()
com.android.gallery3d.app.AlbumPage: void onResume()
com.android.gallery3d.app.AlbumSetPage: void onResume()
com.android.gallery3d.app.ManageCachePage: void onResume()
com.android.gallery3d.app.PhotoPage$Model: void resume()
com.android.gallery3d.app.SlideshowDataAdapter: com.android.gallery3d.data.MediaItem loadItem()
com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: void onDataSetChanged()
com.android.camera.ui.BasicSettingPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.android.camera.ui.EffectSettingPopup: void onClick(android.view.View)
com.android.camera.ui.EffectSettingPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.android.camera.ui.InLineSettingItem: boolean changeIndex(int)
com.android.gallery3d.app.ActivityState: void onResume()
com.android.gallery3d.app.PhotoPage: void onResume()
com.android.gallery3d.app.SlideshowDataAdapter: com.android.gallery3d.data.MediaItem access$500(com.android.gallery3d.app.SlideshowDataAdapter)
com.android.camera.ui.InLineSettingKnob: boolean changeIndex(int)
com.android.camera.ui.InLineSettingRestore: boolean changeIndex(int)
com.android.camera.ui.InLineSettingSwitch: boolean changeIndex(int)
com.android.gallery3d.app.ActivityState: void resume()
com.android.gallery3d.app.SlideshowPage: void onResume()
com.android.gallery3d.app.SlideshowDataAdapter$ReloadTask: java.lang.Void run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.camera.ui.InLineSettingKnob$1: void run()
com.android.camera.ui.InLineSettingKnob$2: boolean onTouch(android.view.View,android.view.MotionEvent)
com.android.camera.ui.InLineSettingKnob$3: boolean onTouch(android.view.View,android.view.MotionEvent)
com.android.camera.ui.InLineSettingSwitch$1: void onCheckedChanged(android.widget.CompoundButton,boolean)
com.android.gallery3d.app.AlbumPage: void resume()
com.android.gallery3d.app.AlbumSetPage: void resume()
com.android.gallery3d.app.ManageCachePage: void resume()
com.android.gallery3d.app.PhotoPage: void resume()
com.android.gallery3d.app.SlideshowPage: void resume()
com.android.gallery3d.app.StateManager: void finishState(com.android.gallery3d.app.ActivityState)
com.android.gallery3d.app.StateManager: void resume()
com.android.gallery3d.app.StateManager: void startStateForResult(java.lang.Class,int,android.os.Bundle)
com.android.gallery3d.app.StateManager: void startState(java.lang.Class,android.os.Bundle)
com.android.gallery3d.app.StateManager: void switchState(com.android.gallery3d.app.ActivityState,java.lang.Class,android.os.Bundle)
com.android.gallery3d.app.SlideshowDataAdapter$ReloadTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.ActivityState: void onBackPressed()
com.android.gallery3d.app.AlbumPage: boolean onItemSelected(android.view.MenuItem)
com.android.gallery3d.app.AlbumPage: void clearLoadingBit(int)
com.android.gallery3d.app.AlbumSetPage: void clearLoadingBit(int)
com.android.gallery3d.app.PhotoPage$2: void onLoadingFinished()
com.android.gallery3d.app.SlideshowPage: void showPendingBitmap()
com.android.gallery3d.app.AlbumPage: void doCluster(int)
com.android.gallery3d.app.AlbumPage: void pickPhoto(int)
com.android.gallery3d.app.AlbumSetPage: void pickAlbum(int)
com.android.gallery3d.app.PhotoPage: boolean onItemSelected(android.view.MenuItem)
com.android.camera.ActivityBase: void createCameraScreenNail(boolean)
com.android.gallery3d.app.AlbumPicker: void onCreate(android.os.Bundle)
com.android.gallery3d.app.AlbumSetPage: boolean onItemSelected(android.view.MenuItem)
com.android.gallery3d.app.DialogPicker: void onCreate(android.os.Bundle)
com.android.gallery3d.app.Gallery: void startDefaultPage()
com.android.gallery3d.app.Gallery: void startGetContent(android.content.Intent)
com.android.gallery3d.app.Gallery: void startViewAction(android.content.Intent)
com.android.gallery3d.ui.ImportCompleteListener: void goToImportedAlbum()
com.android.gallery3d.app.AlbumPage: void onUpPressed()
com.android.gallery3d.app.AlbumSetPage: void doCluster(int)
com.android.gallery3d.app.PhotoPage: void onUpPressed()
com.android.gallery3d.util.ThreadPool$Job: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.AlbumSetPage: void onBackPressed()
com.android.gallery3d.app.ManageCachePage: void onBackPressed()
com.android.gallery3d.app.PhotoPage: void onBackPressed()
com.android.gallery3d.app.SlideshowPage: void onBackPressed()
com.android.gallery3d.app.StateManager: boolean itemSelected(android.view.MenuItem)
com.android.gallery3d.app.StateManager: void onBackPressed()
com.android.gallery3d.app.ActivityState: boolean onItemSelected(android.view.MenuItem)
com.android.gallery3d.app.AlbumPage$5: boolean onActionItemClicked(android.view.MenuItem)
com.android.gallery3d.app.AlbumPage: void access$1600(com.android.gallery3d.app.AlbumPage,int)
com.android.gallery3d.app.AlbumPage: void onPause()
com.android.gallery3d.app.AlbumSetPage: void access$1600(com.android.gallery3d.app.AlbumSetPage,int)
com.android.gallery3d.app.AlbumSetPage: void onPause()
com.android.gallery3d.app.LoadingListener: void onLoadingFinished()
com.android.gallery3d.app.PhotoDataAdapter$DataListener: void onLoadingFinished()
com.android.gallery3d.app.SlideshowPage: void access$100(com.android.gallery3d.app.SlideshowPage)
com.android.gallery3d.app.GalleryActionBar$ClusterRunner: void doCluster(int)
com.android.gallery3d.app.AlbumPage: void access$900(com.android.gallery3d.app.AlbumPage,int)
com.android.gallery3d.app.AlbumSetPage: void access$1000(com.android.gallery3d.app.AlbumSetPage,int)
com.android.camera.Camera: void createCameraScreenNail(boolean)
com.android.camera.PanoramaActivity: void createCameraScreenNail(boolean)
com.android.camera.VideoCamera: void createCameraScreenNail(boolean)
com.android.gallery3d.app.AbstractGalleryActivity: void onCreate(android.os.Bundle)
com.android.gallery3d.app.PickerActivity: void onCreate(android.os.Bundle)
com.android.gallery3d.app.AlbumSetPage$4: boolean onActionItemClicked(android.view.MenuItem)
com.android.gallery3d.app.Gallery: void initializeByIntent()
com.android.gallery3d.ui.ImportCompleteListener: void onProgressComplete(int)
com.android.gallery3d.app.AlbumPage: void onBackPressed()
com.android.gallery3d.app.CropImage$LoadBitmapDataTask: android.graphics.Bitmap run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.CropImage$LoadDataTask: android.graphics.BitmapRegionDecoder run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.PhotoDataAdapter$FullImageJob: android.graphics.BitmapRegionDecoder run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob: com.android.gallery3d.ui.ScreenNail run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.gadget.WidgetUtils: android.graphics.Bitmap createWidgetBitmap(com.android.gallery3d.data.MediaItem)
com.android.gallery3d.ui.AlbumSetSlidingWindow: com.android.gallery3d.ui.BitmapTexture getLoadingTexture()
com.android.gallery3d.util.JobLimiter$JobWrapper: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.util.ThreadPool$Worker: void run()
com.android.gallery3d.app.ManageCachePage: void onClick(android.view.View)
com.android.gallery3d.app.ManageCachePage: void onProgressComplete(int)
com.android.gallery3d.app.SlideshowPage$1: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.app.AbstractGalleryActivity: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.gallery3d.app.AbstractGalleryActivity: void onBackPressed()
com.android.gallery3d.app.ManageCachePage: boolean onItemSelected(android.view.MenuItem)
com.android.gallery3d.app.SlideshowPage: boolean onItemSelected(android.view.MenuItem)
com.android.gallery3d.ui.ActionModeHandler$ActionModeListener: boolean onActionItemClicked(android.view.MenuItem)
com.android.gallery3d.app.AlbumPage$7: void run()
com.android.gallery3d.app.AlbumPage$MyLoadingListener: void onLoadingFinished()
com.android.gallery3d.app.ActivityState: void onPause()
com.android.gallery3d.app.AlbumSetPage$6: void run()
com.android.gallery3d.app.AlbumSetPage$MyLoadingListener: void onLoadingFinished()
com.android.gallery3d.app.AlbumSetDataLoader: java.lang.Object executeAndWait(java.util.concurrent.Callable)
com.android.gallery3d.app.PhotoDataAdapter: java.lang.Object executeAndWait(java.util.concurrent.Callable)
com.android.gallery3d.app.AlbumDataLoader: java.lang.Object executeAndWait(java.util.concurrent.Callable)
com.android.gallery3d.app.GalleryActionBar$1: void onClick(android.content.DialogInterface,int)
com.android.gallery3d.app.GalleryActionBar: boolean onNavigationItemSelected(int,long)
com.android.camera.Camera: void onCreate(android.os.Bundle)
com.android.camera.PanoramaActivity: void onCreate(android.os.Bundle)
com.android.camera.VideoCamera: void onCreate(android.os.Bundle)
com.android.camera.ActivityBase: void onCreate(android.os.Bundle)
com.android.gallery3d.app.CropImage: void onCreate(android.os.Bundle)
com.android.gallery3d.app.Gallery: void onCreate(android.os.Bundle)
com.android.gallery3d.ui.MenuExecutor$ProgressListener: void onProgressComplete(int)
com.android.gallery3d.app.CropImage$LoadBitmapDataTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.CropImage$LoadDataTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.PhotoDataAdapter$FullImageJob: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.gadget.LocalPhotoSource: android.graphics.Bitmap getImage(int)
com.android.gallery3d.gadget.MediaSetSource: android.graphics.Bitmap getImage(int)
com.android.gallery3d.ui.GLView: boolean onTouch(android.view.MotionEvent)
com.android.camera.ActivityBase: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.camera.Camera: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.camera.PanoramaActivity: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.camera.VideoCamera: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.gallery3d.app.Gallery: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.gallery3d.app.PickerActivity: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.camera.ActivityBase: void onBackPressed()
com.android.gallery3d.app.AlbumPicker: void onBackPressed()
com.android.gallery3d.app.DialogPicker: void onBackPressed()
com.android.gallery3d.app.Gallery: void onBackPressed()
com.android.gallery3d.app.PickerActivity: void onBackPressed()
com.android.gallery3d.ui.ActionModeHandler: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)
com.android.gallery3d.app.ManageCachePage: void onPause()
com.android.gallery3d.app.PhotoPage: void onPause()
com.android.gallery3d.app.SlideshowPage: void onPause()
com.android.gallery3d.app.StateManager: void pause()
com.android.gallery3d.app.AlbumSetDataLoader: java.lang.Object access$1900(com.android.gallery3d.app.AlbumSetDataLoader,java.util.concurrent.Callable)
com.android.gallery3d.app.PhotoDataAdapter: java.lang.Object access$2500(com.android.gallery3d.app.PhotoDataAdapter,java.util.concurrent.Callable)
com.android.gallery3d.app.AlbumDataLoader: java.lang.Object access$1700(com.android.gallery3d.app.AlbumDataLoader,java.util.concurrent.Callable)
com.android.gallery3d.ui.MenuExecutor: void onProgressComplete(int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)
com.android.gallery3d.gadget.WidgetSource: android.graphics.Bitmap getImage(int)
com.android.gallery3d.app.AlbumPage$2: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.app.AlbumSetPage$1: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.app.ManageCachePage$1: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.app.PhotoPage$1: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.ui.CropView: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.ui.EdgeView: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.ui.GLView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.ScrollBarView: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.ui.SlideshowView: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.ui.TileImageView: boolean onTouch(android.view.MotionEvent)
com.android.gallery3d.app.AlbumPicker: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.gallery3d.app.DialogPicker: boolean onOptionsItemSelected(android.view.MenuItem)
com.android.camera.Camera: void onBackPressed()
com.android.camera.PanoramaActivity: void onBackPressed()
com.android.camera.VideoCamera: void onBackPressed()
com.android.gallery3d.ui.ActionModeHandler$1: boolean onMenuItemClick(android.view.MenuItem)
com.android.gallery3d.ui.MenuExecutor: void access$700(com.android.gallery3d.ui.MenuExecutor,int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)
com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: android.widget.RemoteViews getViewAt(int)
com.android.gallery3d.app.AlbumPage$2: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.app.AlbumSetPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.app.ManageCachePage$1: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.app.PhotoPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.app.SlideshowPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.CropView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.CropView$FaceHighlightView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.CropView$HighlightRectangle: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.EdgeView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.GLRootView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.GLRootView: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.GLView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.GLView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.PhotoView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.ScrollBarView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.SlideshowView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.SlotView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.TileImageView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.UndoBarView: boolean dispatchTouchEvent(android.view.MotionEvent)
com.android.gallery3d.ui.MenuExecutor$MediaOperation: java.lang.Void run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.ui.GLRoot: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumPage$2: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.app.AlbumSetPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.app.ManageCachePage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.app.PhotoPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.app.SlideshowPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.CropView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.CropView$FaceHighlightView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.CropView$HighlightRectangle: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.EdgeView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.PhotoView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.ScrollBarView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.SlideshowView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.SlotView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.TileImageView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.ui.UndoBarView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)
com.android.gallery3d.app.AlbumPage$2: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumSetPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.ManageCachePage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.PhotoPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.SlideshowPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView$FaceHighlightView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView$HighlightRectangle: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.EdgeView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.GLView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.GLView: void removeAllComponents()
com.android.gallery3d.ui.PhotoView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.ScrollBarView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.SlideshowView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.SlotView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.TileImageView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.UndoBarView: void removeOneComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.MenuExecutor$MediaOperation: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.ActivityState: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumPage$2: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumSetPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.ManageCachePage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.PhotoPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.SlideshowPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView$FaceHighlightView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.CropView$HighlightRectangle: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.EdgeView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.PhotoView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.ScrollBarView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.SlideshowView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.SlotView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.TileImageView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.ui.UndoBarView: boolean removeComponent(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumPage$2: void removeAllComponents()
com.android.gallery3d.app.AlbumSetPage$1: void removeAllComponents()
com.android.gallery3d.app.ManageCachePage$1: void removeAllComponents()
com.android.gallery3d.app.PhotoPage$1: void removeAllComponents()
com.android.gallery3d.app.SlideshowPage$1: void removeAllComponents()
com.android.gallery3d.ui.CropView$FaceHighlightView: void removeAllComponents()
com.android.gallery3d.ui.CropView$HighlightRectangle: void removeAllComponents()
com.android.gallery3d.ui.CropView: void removeAllComponents()
com.android.gallery3d.ui.EdgeView: void removeAllComponents()
com.android.gallery3d.ui.PhotoView: void removeAllComponents()
com.android.gallery3d.ui.ScrollBarView: void removeAllComponents()
com.android.gallery3d.ui.SlideshowView: void removeAllComponents()
com.android.gallery3d.ui.SlotView: void removeAllComponents()
com.android.gallery3d.ui.TileImageView: void removeAllComponents()
com.android.gallery3d.ui.UndoBarView: void removeAllComponents()
com.android.gallery3d.app.AlbumPage: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.AlbumSetPage: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.ManageCachePage: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.PhotoPage: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.SlideshowPage: void setContentPane(com.android.gallery3d.ui.GLView)
com.android.gallery3d.app.SlideshowPage: void initializeViews()
com.android.gallery3d.app.SlideshowPage: void onCreate(android.os.Bundle,android.os.Bundle)
com.android.gallery3d.app.ActivityState: void onCreate(android.os.Bundle,android.os.Bundle)
com.android.gallery3d.app.StateManager: void restoreFromState(android.os.Bundle)
com.android.server.LocationManagerService: boolean isAllowedProviderSafe(java.lang.String)
com.android.server.LocationManagerService: java.util.List _getProvidersLocked(android.location.Criteria,boolean)
com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)
android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(android.location.Criteria,boolean)
android.location.ILocationManager$Stub: java.util.List getProviders(android.location.Criteria,boolean)
com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)
android.location.ILocationManager: java.util.List getProviders(android.location.Criteria,boolean)
android.location.ILocationManager$Stub$Proxy: java.lang.String getBestProvider(android.location.Criteria,boolean)
android.location.ILocationManager$Stub: java.lang.String getBestProvider(android.location.Criteria,boolean)
android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)
android.location.LocationManager: java.util.List getProviders(boolean)
android.location.ILocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)
com.android.server.location.LocationBasedCountryDetector: java.util.List getEnabledProviders()
android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)
com.android.server.TelephonyRegistry: void checkListenerPermission(int)
com.android.server.TelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)
com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)
com.android.internal.telephony.ITelephonyRegistry$Stub: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)
com.android.internal.telephony.ITelephonyRegistry$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.android.internal.telephony.ITelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)
com.android.server.TelephonyRegistry: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)
android.media.AudioService: void <init>(android.content.Context)
com.android.contacts.dialpad.DialpadFragment: void onPause()
com.android.contacts.dialpad.DialpadFragment: void onResume()
com.android.deskclock.AlarmKlaxon: void onCreate()
com.android.deskclock.AlarmKlaxon: void onDestroy()
com.android.internal.policy.impl.GlobalActions: void <init>(android.content.Context,android.view.WindowManagerPolicy$WindowManagerFuncs)
com.android.phone.CallNotifier: void <init>(com.android.phone.PhoneApp,com.android.internal.telephony.Phone,com.android.phone.Ringer,com.android.phone.BluetoothHandsfree,com.android.phone.CallLogAsync)
com.android.phone.OtaStartupReceiver: void onReceive(android.content.Context,android.content.Intent)
com.android.server.location.ComprehensiveCountryDetector: void addPhoneStateListener()
com.android.server.location.ComprehensiveCountryDetector: void removePhoneStateListener()
com.android.settings.deviceinfo.Status: void onPause()
com.android.settings.deviceinfo.Status: void onResume()
com.android.settings.RadioInfo: void onPause()
com.android.settings.RadioInfo: void onResume()
com.android.systemui.statusbar.policy.NetworkController: void <init>(android.content.Context)
com.android.server.ServerThread: void run()
com.android.internal.policy.impl.PhoneWindowManager: void showGlobalActionsDialog()
com.android.phone.CallNotifier: com.android.phone.CallNotifier init(com.android.phone.PhoneApp,com.android.internal.telephony.Phone,com.android.phone.Ringer,com.android.phone.BluetoothHandsfree,com.android.phone.CallLogAsync)
com.android.server.location.ComprehensiveCountryDetector: void setCountryListener(android.location.CountryListener)
com.android.server.location.ComprehensiveCountryDetector: void stop()
com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()
com.android.systemui.statusbar.tablet.TabletStatusBar: android.view.View makeStatusBarView()
com.android.internal.policy.impl.PhoneWindowManager$2: void run()
com.android.phone.PhoneApp: void onCreate()
com.android.server.CountryDetectorService$2: void run()
com.android.server.location.CountryDetectorBase: void setCountryListener(android.location.CountryListener)
com.android.server.location.CountryDetectorBase: void stop()
com.android.systemui.statusbar.phone.PhoneStatusBar: void addStatusBarWindow()
com.android.systemui.statusbar.tablet.TabletStatusBar: void addStatusBarWindow()
com.android.server.location.LocationBasedCountryDetector: void setCountryListener(android.location.CountryListener)
com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()
com.android.systemui.statusbar.phone.PhoneStatusBar: void createAndAddWindows()
com.android.systemui.statusbar.tablet.TabletStatusBar: void createAndAddWindows()
com.android.server.location.ComprehensiveCountryDetector: void access$200(com.android.server.location.ComprehensiveCountryDetector)
com.android.systemui.statusbar.BaseStatusBar: void createAndAddWindows()
com.android.server.location.ComprehensiveCountryDetector$1: void onCountryDetected(android.location.Country)
com.android.systemui.statusbar.BaseStatusBar: void start()
com.android.systemui.statusbar.phone.PhoneStatusBar: void start()
com.android.systemui.statusbar.tablet.TabletStatusBar: void start()
com.android.systemui.SystemUI: void start()
com.android.systemui.SystemUIService: void onCreate()
com.android.phone.PhoneInterfaceManager: android.os.Bundle getCellLocation()
com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getCellLocation()
com.android.internal.telephony.ITelephony$Stub: android.os.Bundle getCellLocation()
com.android.internal.telephony.ITelephony: android.os.Bundle getCellLocation()
com.android.internal.telephony.ITelephony$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()
com.android.phone.PhoneInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.android.server.location.GpsLocationProvider: void requestRefLocation(int)
com.android.phone.PhoneInterfaceManager: java.util.List getNeighboringCellInfo()
com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getNeighboringCellInfo()
com.android.internal.telephony.ITelephony$Stub: java.util.List getNeighboringCellInfo()
com.android.internal.telephony.ITelephony: java.util.List getNeighboringCellInfo()
android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()
com.android.phone.PhoneInterfaceManager: java.util.List getAllCellInfo()
com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getAllCellInfo()
com.android.internal.telephony.ITelephony$Stub: java.util.List getAllCellInfo()
com.android.internal.telephony.ITelephony: java.util.List getAllCellInfo()
android.telephony.TelephonyManager: java.util.List getAllCellInfo()
com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
android.location.ILocationManager$Stub: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
android.location.ILocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)
com.android.server.LocationManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
