android.app.DownloadManager.addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)
android.app.DownloadManager.enqueue(android.app.DownloadManager$Request)
android.app.DownloadManager.getUriForDownloadedFile(long)
android.media.IMediaScannerListener.scanCompleted(java.lang.String,android.net.Uri)
android.media.IMediaScannerListener$Stub.onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.media.IMediaScannerListener$Stub$Proxy.scanCompleted(java.lang.String,android.net.Uri)
android.media.IMediaScannerListener$Stub.scanCompleted(java.lang.String,android.net.Uri)
android.media.MediaScannerConnection$1.onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.net.nsd.INsdManager.getMessenger()
android.net.nsd.INsdManager$Stub.getMessenger()
android.net.nsd.INsdManager$Stub.onTransact(int,android.os.Parcel,android.os.Parcel,int)
android.net.nsd.INsdManager$Stub$Proxy.getMessenger()
android.net.nsd.NsdManager.getMessenger()
android.net.nsd.NsdManager.init()
android.net.nsd.NsdManager.<init>(android.content.Context,android.net.nsd.INsdManager)
android.net.wifi.SupplicantStateTracker$DisconnectedState.processMessage(android.os.Message)
android.net.wifi.SupplicantStateTracker$DormantState.processMessage(android.os.Message)
android.net.wifi.SupplicantStateTracker$InactiveState.processMessage(android.os.Message)
android.net.wifi.SupplicantStateTracker$ScanState.processMessage(android.os.Message)
android.net.wifi.SupplicantStateTracker$UninitializedState.processMessage(android.os.Message)
android.net.wifi.WifiStateMachine$InitialState.processMessage(android.os.Message)
android.net.wifi.WifiWatchdogStateMachine.access$3200(android.net.wifi.WifiWatchdogStateMachine)
android.net.wifi.WifiWatchdogStateMachine.isWalledGardenConnection()
android.net.wifi.WifiWatchdogStateMachine$NotConnectedState.processMessage(android.os.Message)
android.net.wifi.WifiWatchdogStateMachine$OnlineState.processMessage(android.os.Message)
android.net.wifi.WifiWatchdogStateMachine$WalledGardenCheckState.processMessage(android.os.Message)
android.provider.Downloads.removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)
android.webkit.WebSettingsClassic.<init>(android.content.Context,android.webkit.WebViewClassic)
android.webkit.WebSettingsClassic.setBlockNetworkLoads(boolean)
android.webkit.WebSettingsClassic.verifyNetworkAccess()
android.webkit.WebViewClassic.init(java.util.Map,boolean)
android.webkit.WebViewCore.<init>(android.content.Context,android.webkit.WebViewClassic,android.webkit.CallbackProxy,java.util.Map)
android.webkit.WebViewFragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
android.webkit.WebView.<init>(android.content.Context)
android.webkit.WebView.<init>(android.content.Context,android.util.AttributeSet)
android.webkit.WebView.<init>(android.content.Context,android.util.AttributeSet,int)
android.webkit.WebView.<init>(android.content.Context,android.util.AttributeSet,int,boolean)
android.webkit.WebView.<init>(android.content.Context,android.util.AttributeSet,int,java.util.Map,boolean)
android.webkit.WebViewProvider.init(java.util.Map,boolean)
com.android.bluetooth.opp.BluetoothOppBtEnableActivity.onCreate(android.os.Bundle)
com.android.bluetooth.opp.BluetoothOppBtEnablingActivity.onCreate(android.os.Bundle)
com.android.bluetooth.opp.BluetoothOppBtErrorActivity.onCreate(android.os.Bundle)
com.android.bluetooth.opp.BluetoothOppIncomingFileConfirmActivity.onCreate(android.os.Bundle)
com.android.bluetooth.opp.BluetoothOppTransferActivity.onCreate(android.os.Bundle)
com.android.bluetooth.opp.TestTcpServer.run()
com.android.bluetooth.opp.TestTcpSessionNotifier.<init>(int)
com.android.bluetooth.pbap.BluetoothPbapActivity.onCreate(android.os.Bundle)
com.android.browser.ActivityController.handleNewIntent(android.content.Intent)
com.android.browser.ActivityController.onContextItemSelected(android.view.MenuItem)
com.android.browser.ActivityController.onKeyUp(int,android.view.KeyEvent)
com.android.browser.ActivityController.onOptionsItemSelected(android.view.MenuItem)
com.android.browser.ActivityController.start(android.content.Intent)
com.android.browser.BaseUi.onBackKey()
com.android.browser.BaseUi.onOptionsItemSelected(android.view.MenuItem)
com.android.browser.BaseUi.showWeb(boolean)
com.android.browser.BrowserActivity.onContextItemSelected(android.view.MenuItem)
com.android.browser.BrowserActivity.onCreate(android.os.Bundle)
com.android.browser.BrowserActivity.onKeyUp(int,android.view.KeyEvent)
com.android.browser.BrowserActivity.onNewIntent(android.content.Intent)
com.android.browser.BrowserActivity.onOptionsItemSelected(android.view.MenuItem)
com.android.browser.BrowserWebViewFactory.createSubWebView(boolean)
com.android.browser.BrowserWebViewFactory.createWebView(boolean)
com.android.browser.BrowserWebViewFactory.instantiateWebView(android.util.AttributeSet,int,boolean)
com.android.browser.BrowserWebView.<init>(android.content.Context)
com.android.browser.BrowserWebView.<init>(android.content.Context,android.util.AttributeSet)
com.android.browser.BrowserWebView.<init>(android.content.Context,android.util.AttributeSet,int)
com.android.browser.BrowserWebView.<init>(android.content.Context,android.util.AttributeSet,int,boolean)
com.android.browser.BrowserWebView.<init>(android.content.Context,android.util.AttributeSet,int,java.util.Map,boolean)
com.android.browser.Controller$2.run()
com.android.browser.Controller$7.onMenuItemClick(android.view.MenuItem)
com.android.browser.Controller$9.onMenuItemClick(android.view.MenuItem)
com.android.browser.Controller.access$100(com.android.browser.Controller,android.os.Bundle,android.content.Intent,long,boolean)
com.android.browser.Controller.closeCurrentTab()
com.android.browser.Controller.closeCurrentTab(boolean)
com.android.browser.Controller.closeEmptyTab()
com.android.browser.Controller.closeTab(com.android.browser.Tab)
com.android.browser.Controller.createNewSnapshotTab(long,boolean)
com.android.browser.Controller.createNewTab(boolean,boolean,boolean)
com.android.browser.Controller.createSubWindow(com.android.browser.Tab)
com.android.browser.Controller.doStart(android.os.Bundle,android.content.Intent)
com.android.browser.Controller$Download.onMenuItemClick(android.view.MenuItem)
com.android.browser.Controller$Download.saveDataUri()
com.android.browser.Controller.goBackOnePageOrQuit()
com.android.browser.Controller.handleNewIntent(android.content.Intent)
com.android.browser.Controller.onActivityResult(int,int,android.content.Intent)
com.android.browser.Controller.onBackKey()
com.android.browser.Controller.onContextItemSelected(android.view.MenuItem)
com.android.browser.Controller.onDownloadStart(com.android.browser.Tab,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)
com.android.browser.Controller.onKeyDown(int,android.view.KeyEvent)
com.android.browser.Controller.onKeyUp(int,android.view.KeyEvent)
com.android.browser.Controller.onOptionsItemSelected(android.view.MenuItem)
com.android.browser.Controller.onPreloginFinished(android.os.Bundle,android.content.Intent,long,boolean)
com.android.browser.Controller.openIncognitoTab()
com.android.browser.Controller.openTab(com.android.browser.IntentHandler$UrlData)
com.android.browser.Controller.openTab(java.lang.String,boolean,boolean,boolean)
com.android.browser.Controller.openTab(java.lang.String,boolean,boolean,boolean,com.android.browser.Tab)
com.android.browser.Controller.openTab(java.lang.String,com.android.browser.Tab,boolean,boolean)
com.android.browser.Controller.openTabToHomePage()
com.android.browser.Controller.reuseTab(com.android.browser.Tab,com.android.browser.IntentHandler$UrlData)
com.android.browser.Controller.setActiveTab(com.android.browser.Tab)
com.android.browser.Controller.shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)
com.android.browser.Controller.showPreloadedTab(com.android.browser.IntentHandler$UrlData)
com.android.browser.Controller.start(android.content.Intent)
com.android.browser.Controller.switchToTab(com.android.browser.Tab)
com.android.browser.CrashRecoveryHandler.startRecovery(android.content.Intent)
com.android.browser.DownloadHandler$1.run()
com.android.browser.DownloadHandler.onDownloadStart(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.android.browser.DownloadHandler.onDownloadStartNoStream(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.android.browser.FetchUrlMimeType.run()
com.android.browser.GoogleAccountLogin.<init>(android.app.Activity,android.accounts.Account,java.lang.Runnable)
com.android.browser.GoogleAccountLogin.startLoginIfNeeded(android.app.Activity,java.lang.Runnable)
com.android.browser.IntentHandler.onNewIntent(android.content.Intent)
com.android.browser.NavigationBarBase.onAction(java.lang.String,java.lang.String,java.lang.String)
com.android.browser.NavigationBarBase.onClick(android.view.View)
com.android.browser.NavigationBarPhone.onAction(java.lang.String,java.lang.String,java.lang.String)
com.android.browser.NavigationBarPhone.onClick(android.view.View)
com.android.browser.NavigationBarPhone.onMenuItemClick(android.view.MenuItem)
com.android.browser.NavigationBarTablet.onAction(java.lang.String,java.lang.String,java.lang.String)
com.android.browser.NavigationBarTablet.onClick(android.view.View)
com.android.browser.NavScreen$1.onRemovePosition(int)
com.android.browser.NavScreen$2.onLayout(int,int,int,int)
com.android.browser.NavScreen.access$000(com.android.browser.NavScreen,com.android.browser.Tab)
com.android.browser.NavScreen.access$100(com.android.browser.NavScreen,com.android.browser.Tab)
com.android.browser.NavScreen.close(int)
com.android.browser.NavScreen.close(int,boolean)
com.android.browser.NavScreen.onClick(android.view.View)
com.android.browser.NavScreen.onCloseTab(com.android.browser.Tab)
com.android.browser.NavScreen.onMenuItemClick(android.view.MenuItem)
com.android.browser.NavScreen.openNewTab()
com.android.browser.NavScreen.switchToTab(com.android.browser.Tab)
com.android.browser.NavScreen$TabAdapter$1.onClick(android.view.View)
com.android.browser.NavTabScroller$2.onAnimationEnd(android.animation.Animator)
com.android.browser.NavTabScroller.onLayout(boolean,int,int,int,int)
com.android.browser.NavTabScroller$OnLayoutListener.onLayout(int,int,int,int)
com.android.browser.NavTabScroller$OnRemoveListener.onRemovePosition(int)
com.android.browser.OpenDownloadReceiver$1.run()
com.android.browser.OpenDownloadReceiver.access$000(com.android.browser.OpenDownloadReceiver,android.content.Context,long)
com.android.browser.OpenDownloadReceiver.onReceiveAsync(android.content.Context,long)
com.android.browser.PhoneUi.hideNavScreen(int,boolean)
com.android.browser.PhoneUi.onBackKey()
com.android.browser.PhoneUi.onOptionsItemSelected(android.view.MenuItem)
com.android.browser.PhoneUi.showWeb(boolean)
com.android.browser.PhoneUi.toggleNavScreen()
com.android.browser.PieControl.onClick(android.view.View)
com.android.browser.PieControl$TabAdapter$1.onClick(android.view.View)
com.android.browser.preferences.AccessibilityPreferencesFragment.onCreate(android.os.Bundle)
com.android.browser.Preloader.cancelSearchBoxPreload(java.lang.String)
com.android.browser.Preloader.getSession(java.lang.String)
com.android.browser.Preloader.handlePreloadRequest(java.lang.String,java.lang.String,java.util.Map,java.lang.String)
com.android.browser.Preloader$PreloaderSession.<init>(com.android.browser.Preloader,java.lang.String)
com.android.browser.PreloadRequestReceiver.handlePreload(android.content.Context,android.content.Intent)
com.android.browser.PreloadRequestReceiver.onReceive(android.content.Context,android.content.Intent)
com.android.browser.SnapshotBar.onClick(android.view.View)
com.android.browser.SnapshotTab.createSubWindow()
com.android.browser.SnapshotTab.<init>(com.android.browser.WebViewController,long)
com.android.browser.SnapshotTab$LoadData.onPostExecute(android.database.Cursor)
com.android.browser.SnapshotTab$LoadData.onPostExecute(java.lang.Object)
com.android.browser.SnapshotTab.putInForeground()
com.android.browser.SuggestionsAdapter$CompletionListener.onSelect(java.lang.String,int,java.lang.String)
com.android.browser.SuggestionsAdapter.onClick(android.view.View)
com.android.browser.Tab$2.shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
com.android.browser.Tab$3$1.onClick(android.content.DialogInterface,int)
com.android.browser.Tab$3.access$1600(com.android.browser.Tab$3,boolean,android.os.Message)
com.android.browser.Tab$3.createWindow(boolean,android.os.Message)
com.android.browser.Tab$3.onCloseWindow(android.webkit.WebView)
com.android.browser.Tab$3.onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)
com.android.browser.Tab$3.onRequestFocus(android.webkit.WebView)
com.android.browser.Tab$4.onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)
com.android.browser.Tab$7.onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)
com.android.browser.TabBar.onClick(android.view.View)
com.android.browser.TabBar$TabView.closeTab()
com.android.browser.TabBar$TabView.onClick(android.view.View)
com.android.browser.TabControl.createNewTab()
com.android.browser.TabControl.createNewTab(android.os.Bundle,boolean)
com.android.browser.TabControl.createNewTab(boolean)
com.android.browser.TabControl.createNewWebView()
com.android.browser.TabControl.createNewWebView(boolean)
com.android.browser.TabControl.createSnapshotTab(long)
com.android.browser.TabControl.recreateWebView(com.android.browser.Tab)
com.android.browser.TabControl.restoreState(android.os.Bundle,long,boolean,boolean)
com.android.browser.TabControl.setCurrentTab(com.android.browser.Tab)
com.android.browser.TabControl.setCurrentTab(com.android.browser.Tab,boolean)
com.android.browser.Tab.createSubWindow()
com.android.browser.Tab.putInForeground()
com.android.browser.UiController.closeCurrentTab()
com.android.browser.UiController.closeTab(com.android.browser.Tab)
com.android.browser.UiController.createNewSnapshotTab(long,boolean)
com.android.browser.UiController.handleNewIntent(android.content.Intent)
com.android.browser.UiController.onOptionsItemSelected(android.view.MenuItem)
com.android.browser.UiController.openIncognitoTab()
com.android.browser.UiController.openTab(java.lang.String,boolean,boolean,boolean)
com.android.browser.UiController.openTabToHomePage()
com.android.browser.UiController.setActiveTab(com.android.browser.Tab)
com.android.browser.UiController.switchToTab(com.android.browser.Tab)
com.android.browser.UI.onBackKey()
com.android.browser.UI.onOptionsItemSelected(android.view.MenuItem)
com.android.browser.UI.showWeb(boolean)
com.android.browser.UrlHandler.handleMenuClick(com.android.browser.Tab,java.lang.String)
com.android.browser.UrlHandler$RLZTask.onPostExecute(java.lang.Object)
com.android.browser.UrlHandler$RLZTask.onPostExecute(java.lang.String)
com.android.browser.UrlHandler.shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)
com.android.browser.UrlHandler.startActivityForUrl(com.android.browser.Tab,java.lang.String)
com.android.browser.UrlInputView.finishInput(java.lang.String,java.lang.String,java.lang.String)
com.android.browser.UrlInputView.onEditorAction(android.widget.TextView,int,android.view.KeyEvent)
com.android.browser.UrlInputView.onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.android.browser.UrlInputView.onKeyDown(int,android.view.KeyEvent)
com.android.browser.UrlInputView.onSelect(java.lang.String,int,java.lang.String)
com.android.browser.UrlInputView$UrlInputListener.onAction(java.lang.String,java.lang.String,java.lang.String)
com.android.browser.view.ScrollerView.onLayout(boolean,int,int,int,int)
com.android.browser.WallpaperHandler.onMenuItemClick(android.view.MenuItem)
com.android.browser.WallpaperHandler.openStream()
com.android.browser.WallpaperHandler.run()
com.android.browser.WebViewController.closeTab(com.android.browser.Tab)
com.android.browser.WebViewController.createSubWindow(com.android.browser.Tab)
com.android.browser.WebViewController.onDownloadStart(com.android.browser.Tab,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)
com.android.browser.WebViewController.openTab(java.lang.String,boolean,boolean,boolean)
com.android.browser.WebViewController.openTab(java.lang.String,com.android.browser.Tab,boolean,boolean)
com.android.browser.WebViewController.shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)
com.android.browser.WebViewController.switchToTab(com.android.browser.Tab)
com.android.browser.WebViewFactory.createSubWebView(boolean)
com.android.browser.WebViewFactory.createWebView(boolean)
com.android.browser.XLargeUi.onBackKey()
com.android.browser.XLargeUi.onOptionsItemSelected(android.view.MenuItem)
com.android.browser.XLargeUi.showWeb(boolean)
com.android.email.activity.MessageFileViewFragment.onClick(android.view.View)
com.android.email.activity.MessageFileViewFragment.onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)
com.android.email.activity.MessageFileViewFragment.onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)
com.android.email.activity.MessageFileViewFragment.performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)
com.android.email.activity.MessageViewFragmentBase.onClick(android.view.View)
com.android.email.activity.MessageViewFragmentBase.onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)
com.android.email.activity.MessageViewFragmentBase.onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)
com.android.email.activity.MessageViewFragmentBase.performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)
com.android.email.activity.MessageViewFragment.onClick(android.view.View)
com.android.email.activity.MessageViewFragment.onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)
com.android.email.activity.MessageViewFragment.onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)
com.android.email.activity.MessageViewFragment.performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)
com.android.email.activity.setup.DebugFragment.clearWebViewCache()
com.android.email.activity.setup.DebugFragment.onClick(android.view.View)
com.android.emailcommon.utility.AttachmentUtilities.saveAttachment(android.content.Context,java.io.InputStream,com.android.emailcommon.provider.EmailContent$Attachment)
com.android.email.view.RigidWebView.<init>(android.content.Context)
com.android.email.view.RigidWebView.<init>(android.content.Context,android.util.AttributeSet)
com.android.email.view.RigidWebView.<init>(android.content.Context,android.util.AttributeSet,int)
com.android.email.view.RigidWebView.<init>(android.content.Context,android.util.AttributeSet,int,boolean)
com.android.email.view.RigidWebView.<init>(android.content.Context,android.util.AttributeSet,int,java.util.Map,boolean)
com.android.gallery3d.app.CropImage$LoadBitmapDataTask.run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.CropImage$LoadDataTask.run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.PhotoDataAdapter$FullImageJob.run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob.run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.app.SlideshowDataAdapter$ReloadTask.run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.data.DownloadCache$DownloadTask.run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.data.DownloadUtils.download(com.android.gallery3d.util.ThreadPool$JobContext,java.net.URL,java.io.OutputStream)
com.android.gallery3d.data.DownloadUtils.requestDownload(com.android.gallery3d.util.ThreadPool$JobContext,java.net.URL,java.io.File)
com.android.gallery3d.gadget.LocalPhotoSource.getImage(int)
com.android.gallery3d.gadget.MediaSetSource.getImage(int)
com.android.gallery3d.gadget.WidgetService$PhotoRVFactory.getViewAt(int)
com.android.gallery3d.gadget.WidgetSource.getImage(int)
com.android.gallery3d.gadget.WidgetUtils.createWidgetBitmap(com.android.gallery3d.data.MediaItem)
com.android.gallery3d.ui.AlbumSetSlidingWindow.getLoadingTexture()
com.android.gallery3d.util.JobLimiter$JobWrapper.run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.util.ThreadPool$Job.run(com.android.gallery3d.util.ThreadPool$JobContext)
com.android.gallery3d.util.ThreadPool$Worker.run()
com.android.htmlviewer.HTMLViewerActivity.onCreate(android.os.Bundle)
com.android.internal.app.AlertActivity.onCreate(android.os.Bundle)
com.android.internal.app.ChooserActivity.onCreate(android.os.Bundle)
com.android.internal.app.ChooserActivity.onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)
com.android.internal.app.ExternalMediaFormatActivity.onCreate(android.os.Bundle)
com.android.internal.app.NetInitiatedActivity.onCreate(android.os.Bundle)
com.android.internal.app.ResolverActivity.onCreate(android.os.Bundle)
com.android.internal.app.ResolverActivity.onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)
com.android.internal.telephony.test.ModelInterpreter.<init>(java.net.InetSocketAddress)
com.android.internal.util.IState.processMessage(android.os.Message)
com.android.internal.util.StateMachine$SmHandler.processMsg(android.os.Message)
com.android.internal.util.State.processMessage(android.os.Message)
com.android.musicfx.ControlPanelPicker.onCreate(android.os.Bundle)
com.android.nfc.TechListChooserActivity.onCreate(android.os.Bundle)
com.android.nfc.TechListChooserActivity.onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)
com.android.providers.downloads.DownloadInfo.getAllDownloadsUri()
com.android.providers.downloads.DownloadInfo.getMyDownloadsUri()
com.android.providers.downloads.DownloadInfo.notifyPauseDueToSize(boolean)
com.android.providers.downloads.DownloadInfo$Reader.newDownloadInfo(android.content.Context,com.android.providers.downloads.SystemFacade)
com.android.providers.downloads.DownloadInfo$Reader.readRequestHeaders(com.android.providers.downloads.DownloadInfo)
com.android.providers.downloads.DownloadInfo.sendIntentIfRequested()
com.android.providers.downloads.DownloadInfo.startIfReady(long,com.android.providers.downloads.StorageManager)
com.android.providers.downloads.DownloadProvider.checkInsertPermissions(android.content.ContentValues)
com.android.providers.downloads.DownloadProvider.insert(android.net.Uri,android.content.ContentValues)
com.android.providers.downloads.DownloadProvider.logVerboseOpenFileInfo(android.net.Uri,java.lang.String)
com.android.providers.downloads.DownloadProvider.openFile(android.net.Uri,java.lang.String)
com.android.providers.downloads.DownloadService$1.onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.android.providers.downloads.DownloadService$1.scanCompleted(java.lang.String,android.net.Uri)
com.android.providers.downloads.DownloadService.access$500(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,com.android.providers.downloads.DownloadInfo,long)
com.android.providers.downloads.DownloadService.access$600(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,long)
com.android.providers.downloads.DownloadService.access$700(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo,boolean,boolean)
com.android.providers.downloads.DownloadService.access$800(com.android.providers.downloads.DownloadService,long)
com.android.providers.downloads.DownloadService.deleteDownloadLocked(long)
com.android.providers.downloads.DownloadService.insertDownloadLocked(com.android.providers.downloads.DownloadInfo$Reader,long)
com.android.providers.downloads.DownloadService.scanFile(com.android.providers.downloads.DownloadInfo,boolean,boolean)
com.android.providers.downloads.DownloadService.updateDownload(com.android.providers.downloads.DownloadInfo$Reader,com.android.providers.downloads.DownloadInfo,long)
com.android.providers.downloads.DownloadService$UpdateThread.run()
com.android.providers.downloads.DownloadThread.checkConnectivity()
com.android.providers.downloads.DownloadThread.checkPausedOrCanceled(com.android.providers.downloads.DownloadThread$State)
com.android.providers.downloads.DownloadThread.executeDownload(com.android.providers.downloads.DownloadThread$State,android.net.http.AndroidHttpClient,org.apache.http.client.methods.HttpGet)
com.android.providers.downloads.DownloadThread.handleEndOfStream(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)
com.android.providers.downloads.DownloadThread.notifyDownloadCompleted(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.android.providers.downloads.DownloadThread.notifyThroughDatabase(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.android.providers.downloads.DownloadThread.processResponseHeaders(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,org.apache.http.HttpResponse)
com.android.providers.downloads.DownloadThread.readFromResponse(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,byte[],java.io.InputStream)
com.android.providers.downloads.DownloadThread.reportProgress(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)
com.android.providers.downloads.DownloadThread.run()
com.android.providers.downloads.DownloadThread.transferData(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,byte[],java.io.InputStream)
com.android.providers.downloads.DownloadThread.updateDatabaseFromHeaders(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)
com.android.providers.downloads.DownloadThread.writeDataToDestination(com.android.providers.downloads.DownloadThread$State,byte[],int)
com.android.providers.downloads.Helpers.generateSaveFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long,boolean,com.android.providers.downloads.StorageManager)
com.android.providers.downloads.StorageManager$1.run()
com.android.providers.downloads.StorageManager.access$100(com.android.providers.downloads.StorageManager)
com.android.providers.downloads.StorageManager.discardPurgeableFiles(int,long)
com.android.providers.downloads.StorageManager.findSpace(java.io.File,long,int)
com.android.providers.downloads.StorageManager.trimDatabase()
com.android.providers.downloads.StorageManager.verifySpaceBeforeWritingToFile(int,java.lang.String,long)
com.android.providers.downloads.StorageManager.verifySpace(int,java.lang.String,long)
com.android.providers.media.RingtonePickerActivity.onCreate(android.os.Bundle)
com.android.quicksearchbox.google.SearchBaseUrlHelper$1.doInBackground(java.lang.Object[])
com.android.quicksearchbox.google.SearchBaseUrlHelper$1.doInBackground(java.lang.Void[])
com.android.quicksearchbox.util.HttpHelper.get(com.android.quicksearchbox.util.HttpHelper$GetRequest)
com.android.quicksearchbox.util.HttpHelper.get(java.lang.String,java.util.Map)
com.android.quicksearchbox.util.HttpHelper.post(com.android.quicksearchbox.util.HttpHelper$PostRequest)
com.android.quicksearchbox.util.HttpHelper.post(java.lang.String,java.util.Map,java.lang.String)
com.android.quicksearchbox.util.JavaNetHttpHelper.createConnection(java.lang.String,java.util.Map)
com.android.quicksearchbox.util.JavaNetHttpHelper.get(com.android.quicksearchbox.util.HttpHelper$GetRequest)
com.android.quicksearchbox.util.JavaNetHttpHelper.get(java.lang.String,java.util.Map)
com.android.quicksearchbox.util.JavaNetHttpHelper.post(com.android.quicksearchbox.util.HttpHelper$PostRequest)
com.android.quicksearchbox.util.JavaNetHttpHelper.post(java.lang.String,java.util.Map,java.lang.String)
com.android.server.BootReceiver$1.run()
com.android.server.BootReceiver.access$100(com.android.server.BootReceiver,android.content.Context)
com.android.server.BootReceiver.onReceive(android.content.Context,android.content.Intent)
com.android.server.BootReceiver.removeOldUpdatePackages(android.content.Context)
com.android.server.NsdService.getMessenger()
com.android.server.NsdService.onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.android.settings.AccessibilitySettings.onCreate(android.os.Bundle)
com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment.onCreate(android.os.Bundle)
com.android.settings.accounts.AccountPreferenceBase.onCreate(android.os.Bundle)
com.android.settings.accounts.AccountSyncSettings.onCreate(android.os.Bundle)
com.android.settings.accounts.ManageAccountsSettings.onCreate(android.os.Bundle)
com.android.settings.accounts.SyncSettings.onCreate(android.os.Bundle)
com.android.settings.ActivityPicker.onCreate(android.os.Bundle)
com.android.settings.AllowBindAppWidgetActivity.onCreate(android.os.Bundle)
com.android.settings.ApplicationSettings.onCreate(android.os.Bundle)
com.android.settings.AppWidgetPickActivity.onCreate(android.os.Bundle)
com.android.settings.bluetooth.BluetoothPairingDialog.onCreate(android.os.Bundle)
com.android.settings.bluetooth.BluetoothPermissionActivity.onCreate(android.os.Bundle)
com.android.settings.bluetooth.BluetoothSettings.onCreate(android.os.Bundle)
com.android.settings.bluetooth.DeviceListPreferenceFragment.onCreate(android.os.Bundle)
com.android.settings.bluetooth.DevicePickerFragment.onCreate(android.os.Bundle)
com.android.settings.bluetooth.DeviceProfilesSettings.onCreate(android.os.Bundle)
com.android.settings.bluetooth.RequestPermissionHelperActivity.onCreate(android.os.Bundle)
com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment.onCreate(android.os.Bundle)
com.android.settings.DateTimeSettings.onCreate(android.os.Bundle)
com.android.settings.deviceinfo.Memory.onCreate(android.os.Bundle)
com.android.settings.DeviceInfoSettings.onCreate(android.os.Bundle)
com.android.settings.deviceinfo.UsbSettings.onCreate(android.os.Bundle)
com.android.settings.DisplaySettings.onCreate(android.os.Bundle)
com.android.settings.DockSettings.onCreate(android.os.Bundle)
com.android.settings.DreamSettings.onCreate(android.os.Bundle)
com.android.settings.inputmethod.InputMethodAndLanguageSettings.onCreate(android.os.Bundle)
com.android.settings.inputmethod.InputMethodAndSubtypeEnabler.onCreate(android.os.Bundle)
com.android.settings.inputmethod.KeyboardLayoutPickerFragment.onCreate(android.os.Bundle)
com.android.settings.inputmethod.SpellCheckersSettings.onCreate(android.os.Bundle)
com.android.settings.inputmethod.UserDictionaryList.onCreate(android.os.Bundle)
com.android.settings.LocationSettings.onCreate(android.os.Bundle)
com.android.settings.net.DataUsageMeteredSettings.onCreate(android.os.Bundle)
com.android.settings.PrivacySettings.onCreate(android.os.Bundle)
com.android.settings.SecuritySettings.onCreate(android.os.Bundle)
com.android.settings.SettingsLicenseActivity.onCreate(android.os.Bundle)
com.android.settings.SettingsPreferenceFragment.onCreate(android.os.Bundle)
com.android.settings.SettingsSafetyLegalActivity.onCreate(android.os.Bundle)
com.android.settings.SoundSettings.onCreate(android.os.Bundle)
com.android.settings.TetherSettings.onCreate(android.os.Bundle)
com.android.settings.tts.TextToSpeechSettings.onCreate(android.os.Bundle)
com.android.settings.tts.TtsEngineSettingsFragment.onCreate(android.os.Bundle)
com.android.settings.users.UserDetailsSettings.onCreate(android.os.Bundle)
com.android.settings.users.UserSettings.onCreate(android.os.Bundle)
com.android.settings.vpn2.VpnSettings.onCreate(android.os.Bundle)
com.android.settings.WallpaperTypeSettings.onCreate(android.os.Bundle)
com.android.settings.wifi.AdvancedWifiSettings.onCreate(android.os.Bundle)
com.android.settings.wifi.p2p.WifiP2pSettings.onCreate(android.os.Bundle)
com.android.settings.wifi.WifiSettings.onCreate(android.os.Bundle)
com.android.settings.WirelessSettings.onCreate(android.os.Bundle)
com.android.systemui.usb.UsbAccessoryUriActivity.onCreate(android.os.Bundle)
com.android.systemui.usb.UsbConfirmActivity.onCreate(android.os.Bundle)
com.android.systemui.usb.UsbPermissionActivity.onCreate(android.os.Bundle)
com.android.systemui.usb.UsbResolverActivity.onCreate(android.os.Bundle)
com.android.systemui.usb.UsbResolverActivity.onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)
com.android.vpndialogs.ConfirmDialog.onCreate(android.os.Bundle)
com.android.vpndialogs.ManageDialog.onCreate(android.os.Bundle)
com.google.common.io.ByteStreams$4.getInput()
com.google.common.io.ByteStreams$5.getInput()
com.google.common.io.ByteStreams.copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier)
com.google.common.io.ByteStreams.copy(com.google.common.io.InputSupplier,java.io.OutputStream)
com.google.common.io.ByteStreams.equal(com.google.common.io.InputSupplier,com.google.common.io.InputSupplier)
com.google.common.io.ByteStreams.getChecksum(com.google.common.io.InputSupplier,java.util.zip.Checksum)
com.google.common.io.ByteStreams.getDigest(com.google.common.io.InputSupplier,java.security.MessageDigest)
com.google.common.io.ByteStreams.length(com.google.common.io.InputSupplier)
com.google.common.io.ByteStreams.readBytes(com.google.common.io.InputSupplier,com.google.common.io.ByteProcessor)
com.google.common.io.ByteStreams.toByteArray(com.google.common.io.InputSupplier)
com.google.common.io.CharStreams$2.getInput()
com.google.common.io.CharStreams$4.getInput()
com.google.common.io.CharStreams.copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier)
com.google.common.io.CharStreams.copy(com.google.common.io.InputSupplier,java.lang.Appendable)
com.google.common.io.CharStreams.readFirstLine(com.google.common.io.InputSupplier)
com.google.common.io.CharStreams.readLines(com.google.common.io.InputSupplier)
com.google.common.io.CharStreams.readLines(com.google.common.io.InputSupplier,com.google.common.io.LineProcessor)
com.google.common.io.CharStreams.toStringBuilder(com.google.common.io.InputSupplier)
com.google.common.io.CharStreams.toString(com.google.common.io.InputSupplier)
com.google.common.io.Files.copy(com.google.common.io.InputSupplier,java.io.File)
com.google.common.io.Files.copy(com.google.common.io.InputSupplier,java.io.File,java.nio.charset.Charset)
com.google.common.io.Files.copy(java.io.File,com.google.common.io.OutputSupplier)
com.google.common.io.Files.copy(java.io.File,java.io.File)
com.google.common.io.Files.copy(java.io.File,java.io.OutputStream)
com.google.common.io.Files.copy(java.io.File,java.nio.charset.Charset,com.google.common.io.OutputSupplier)
com.google.common.io.Files.copy(java.io.File,java.nio.charset.Charset,java.lang.Appendable)
com.google.common.io.Files.equal(java.io.File,java.io.File)
com.google.common.io.Files.getChecksum(java.io.File,java.util.zip.Checksum)
com.google.common.io.Files.getDigest(java.io.File,java.security.MessageDigest)
com.google.common.io.Files.move(java.io.File,java.io.File)
com.google.common.io.Files.readBytes(java.io.File,com.google.common.io.ByteProcessor)
com.google.common.io.Files.readFirstLine(java.io.File,java.nio.charset.Charset)
com.google.common.io.Files.readLines(java.io.File,java.nio.charset.Charset)
com.google.common.io.Files.readLines(java.io.File,java.nio.charset.Charset,com.google.common.io.LineProcessor)
com.google.common.io.Files.toByteArray(java.io.File)
com.google.common.io.Files.toString(java.io.File,java.nio.charset.Charset)
com.google.common.io.InputSupplier.getInput()
com.google.common.io.MultiInputStream.advance()
com.google.common.io.MultiInputStream.<init>(java.util.Iterator)
com.google.common.io.MultiInputStream.read()
com.google.common.io.MultiInputStream.read(byte[],int,int)
com.google.common.io.MultiInputStream.skip(long)
com.google.common.io.MultiReader.advance()
com.google.common.io.MultiReader.<init>(java.util.Iterator)
com.google.common.io.MultiReader.read(char[],int,int)
com.google.common.io.MultiReader.skip(long)
com.google.common.io.Resources$1.getInput()
com.google.common.io.Resources.copy(java.net.URL,java.io.OutputStream)
com.google.common.io.Resources.readLines(java.net.URL,java.nio.charset.Charset)
com.google.common.io.Resources.readLines(java.net.URL,java.nio.charset.Charset,com.google.common.io.LineProcessor)
com.google.common.io.Resources.toByteArray(java.net.URL)
com.google.common.io.Resources.toString(java.net.URL,java.nio.charset.Charset)
java.net.DatagramSocket.<init>(int)
java.net.HttpURLConnection.connect()
java.net.HttpURLConnection.<init>(int)
java.net.MulticastSocket.<init>(int)
java.net.NetworkInterface.<init>(int)
java.net.ServerSocket.bind(java.net.SocketAddress)
java.net.ServerSocket.<init>(int)
java.net.Socket.<init>(int)
java.net.URLConnection.connect()
java.net.URLConnection.getInputStream()
java.net.URL.getContent()
java.net.URL.openConnection()
java.net.URL.openStream()
org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest)
org.apache.http.impl.client.DefaultHttpClient.<init>(int)
